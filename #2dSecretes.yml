#   Kubernetes Secrets are secure objects which store sensitive data, such as passwords, OAuth tokens, and SSH keys, etc. 
#   with encryption in your clusters.
#   Using Secrets gives you more flexibility in a Pod Life cycle definition and control over how sensitive data is used. 
#   It reduces the risk of exposing the data to unauthorized users.
#   Secrets can be mounted as data volumes or environment variables to be used by a container in a pod.
   
#   creatng the secrets 
#            apiVersion: v11
#            data: 
#             password: ZGF0YWJhc2UK // echo -n "database" | base 64
#             username: bm9kZWpzCgo=    // echo -n "nodejs" | base 64
#            kind: Secret
#             metadata: 
#               name: database-nodejs
#               type: Opaque   

#   we can specify the secrets in volumes of pods and also used as environmental variables in pods 
#   apiVersion: v1
#   kind: Pod
#   metadata: 
#     name: Node-app
#   spec: 
#     containers: 
#       env: 
#         name: MYSQL_USER
#         valueFrom: 
#           secretKeyRef: 
#             key: username
#             name: database-creds 
#         name: MYSQL_PASSWORD
#         valueFrom: 
#           secretKeyRef: 
#              key: password
#              name: database-creds
#       image: "mysql:latest"
#       name: Node-demo 


# apiVersion: v1
# kind: Pod
# metadata: 
#   name: node-pod
# spec: 
#   containers:   // 
#     - 
#       image: node/demo
#       name: nodejs-demo
#       volumeMounts: 
#         mountPath: /etc/node
#         name: database-node
#         readOnly: true
#   volumes: 
#     name: database-node
#     secret: 
#       secretName: database-nodejs

Keys are stored in secrets and deployed to pods using volumes and variables 
